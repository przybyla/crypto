{"version":3,"file":"static/js/925.ecc9c731.chunk.js","mappings":"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","sources":["components/CoinDetails/components/Chart.tsx","components/CoinDetails/components/Card.tsx","components/CoinDetails/CoinDetails.tsx","store/coingeco/selectors.ts"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport {\r\n  AreaChart,\r\n  Tooltip,\r\n  Area,\r\n  CartesianGrid,\r\n  XAxis,\r\n  YAxis,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport Button from \"@mui/material/Button\";\r\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\r\nimport { format } from \"date-fns\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { selectCoinMarketChart } from \"../../../store/coingeco/selectors\";\r\nimport { getCoinMarketChart } from \"../../../store/coingeco/actions\";\r\nimport { Typography } from \"@mui/material\";\r\n\r\nconst Chart = () => {\r\n  const dispatch = useDispatch();\r\n  const { coinId } = useParams();\r\n\r\n  const [days, setDays] = useState<string>(\"30\");\r\n\r\n  useEffect(() => {\r\n    coinId && dispatch(getCoinMarketChart({ coinId, days }));\r\n  }, [dispatch, coinId, days]);\r\n\r\n  const coinMarketChart = useSelector(selectCoinMarketChart);\r\n\r\n  const CustomTooltip = ({ active, payload, label }: any) => {\r\n    if (active && payload && payload.length) {\r\n      return (\r\n        <div className=\"tooltip\">\r\n          <Typography>{label}</Typography>\r\n          <Typography>Price: ${payload[0].value}</Typography>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  };\r\n  const price = coinMarketChart?.prices.map((price) => ({\r\n    name: format(new Date(price[0]), \"Pp\"),\r\n    price: price[1].toFixed(2),\r\n  }));\r\n  return (\r\n    <Wrapper className=\"chart\">\r\n      <ButtonGroup\r\n        variant=\"contained\"\r\n        aria-label=\"outlined primary button group\"\r\n        className=\"button-group\"\r\n      >\r\n        <Button onClick={() => setDays(\"1\")}>24h</Button>\r\n        <Button onClick={() => setDays(\"7\")}>7d</Button>\r\n        <Button onClick={() => setDays(\"14\")}>14d</Button>\r\n        <Button onClick={() => setDays(\"30\")}>30d</Button>\r\n      </ButtonGroup>\r\n      <div style={{ height: \"700px\" }}>\r\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n          <AreaChart\r\n            data={price}\r\n            margin={{ top: 20, right: 30, left: 0, bottom: 0 }}\r\n          >\r\n            <defs>\r\n              <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                <stop offset=\"5%\" stopColor=\"#42a5f5\" stopOpacity={0.8} />\r\n                <stop offset=\"95%\" stopColor=\"#42a5f5\" stopOpacity={0} />\r\n              </linearGradient>\r\n            </defs>\r\n            <XAxis dataKey=\"name\" axisLine={false} tickLine={false} />\r\n            <YAxis\r\n              dataKey=\"price\"\r\n              axisLine={false}\r\n              tickLine={false}\r\n              tickCount={8}\r\n              tickFormatter={(price: number) => `$${price}`}\r\n              type=\"number\"\r\n              domain={[\"dataMin\", \"dataMax\"]}\r\n              label={{\r\n                offset: -1000,\r\n              }}\r\n            />\r\n            <CartesianGrid opacity={0.1} vertical={false} />\r\n            <Tooltip content={<CustomTooltip />} />\r\n            <Area\r\n              type=\"monotone\"\r\n              dataKey=\"price\"\r\n              stroke=\"#8884d8\"\r\n              fillOpacity={1}\r\n              fill=\"url(#colorUv)\"\r\n            />\r\n          </AreaChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n\r\nconst Wrapper = styled.div`\r\n  .button-group {\r\n  }\r\n  .tooltip {\r\n    border-radius: 0.25rem;\r\n    background-color: #42a5f5;\r\n    padding: 1rem;\r\n    text-align: center;\r\n    color: #000;\r\n    box-shadow: 15px 30px 40px 5px rgba(0, 0, 0, 0.5);\r\n    text-align: left;\r\n  }\r\n`;\r\n","import { Card as MaterialCard } from \"@mui/material\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  selectCoinCurrentPrice,\r\n  selectCoinValuation,\r\n  selectCoin24High,\r\n  selectCoin24Low,\r\n  selectCoinMarketCap,\r\n} from \"../../../store/coingeco/selectors\";\r\nconst Card = () => {\r\n  const currentCoinPrice = useSelector(selectCoinCurrentPrice);\r\n  const coinValuation = useSelector(selectCoinValuation);\r\n  const coin24High = useSelector(selectCoin24High);\r\n  const coin24Low = useSelector(selectCoin24Low);\r\n  const coinMarketCap = useSelector(selectCoinMarketCap);\r\n  return (\r\n    <MaterialCard className=\"card\">\r\n      <CardHeader title=\"Coin Stats\"></CardHeader>\r\n      <CardContent>\r\n        <List>\r\n          <ListItem>\r\n            Price: ${currentCoinPrice?.toLocaleString(\"en-US\")}\r\n          </ListItem>\r\n          <Divider />\r\n          <ListItem divider>\r\n            Current Price: ${coinValuation?.toLocaleString(\"en-US\")}\r\n          </ListItem>\r\n          <ListItem>\r\n            Market Cap: ${coinMarketCap?.toLocaleString(\"en-US\")}\r\n          </ListItem>\r\n          <Divider light />\r\n          <ListItem>24h High: ${coin24High?.toLocaleString(\"en-US\")}</ListItem>\r\n          <Divider light />\r\n          <ListItem>24h Low ${coin24Low?.toLocaleString(\"en-US\")}</ListItem>\r\n        </List>\r\n      </CardContent>\r\n    </MaterialCard>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  getCoinDetails,\r\n  clearCoinMarketChart,\r\n  clearCoinDetails,\r\n} from \"../../store/coingeco/actions\";\r\nimport { selectCoinDetails } from \"../../store/coingeco/selectors\";\r\nimport Chart from \"./components/Chart\";\r\nimport Card from \"./components/Card\";\r\nimport { Avatar } from \"@mui/material\";\r\n\r\nconst CoinDetails = () => {\r\n  const dispatch = useDispatch();\r\n  const { coinId } = useParams();\r\n\r\n  const coinDetails = useSelector(selectCoinDetails);\r\n\r\n  useEffect(() => {\r\n    coinId && dispatch(getCoinDetails(coinId));\r\n  }, [dispatch, coinId]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(clearCoinMarketChart());\r\n      dispatch(clearCoinDetails());\r\n    };\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"coin-details-header\">\r\n        <Breadcrumbs aria-label=\"breadcrumb\" className=\"breadcrumb\">\r\n          <Link to=\"/\">List</Link>\r\n          <Typography>{coinDetails?.name}</Typography>\r\n        </Breadcrumbs>\r\n        <Stack spacing={2} direction=\"row\">\r\n          <Avatar\r\n            src={coinDetails?.image.thumb}\r\n            alt=\"\"\r\n            sx={{ width: 24, height: 24 }}\r\n          />\r\n          <Typography variant=\"h6\" alignItems=\"center\" color=\"text.secondary\">\r\n            {coinDetails?.name}\r\n          </Typography>\r\n        </Stack>\r\n      </div>\r\n      <div className=\"coin-details-content\">\r\n        <Chart />\r\n        <Card />\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default CoinDetails;\r\n\r\nconst Wrapper = styled.div`\r\n  .coin-details-header,\r\n  .breadcrumb {\r\n    margin: 15px 0;\r\n  }\r\n\r\n  .coin-details-content {\r\n    display: grid;\r\n    grid-template-columns: auto;\r\n    grid-template-rows: auto;\r\n    gap: 5px 15px;\r\n    .card {\r\n      grid-column: 1;\r\n    }\r\n\r\n    @media (min-width: 1200px) {\r\n      grid-template-columns: auto 345px;\r\n      .card {\r\n        grid-column: 2;\r\n      }\r\n      .chart {\r\n        grid-column: 1;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { RootState } from \"../reducers\";\r\n\r\nexport const selectCoins = (state: RootState) => state.coingeco.coins;\r\nexport const selectCoinDetails = (state: RootState) => state.coingeco.details;\r\nexport const selectCoinMarketChart = (state: RootState) => state.coingeco.chart;\r\nexport const selectCoinCurrentPrice = (state: RootState) =>\r\n  state.coingeco.details?.market_data.current_price.usd;\r\nexport const selectCoinValuation = (state: RootState) =>\r\n  state.coingeco.details?.market_data.fully_diluted_valuation.usd;\r\nexport const selectCoin24High = (state: RootState) =>\r\n  state.coingeco.details?.market_data.high_24h.usd;\r\nexport const selectCoin24Low = (state: RootState) =>\r\n  state.coingeco.details?.market_data.low_24h.usd;\r\nexport const selectCoinMarketCap = (state: RootState) =>\r\n  state.coingeco.details?.market_data.market_cap.usd;\r\n"],"names":["dispatch","useDispatch","coinId","useParams","useState","days","setDays","useEffect","getCoinMarketChart","coinMarketChart","useSelector","selectCoinMarketChart","CustomTooltip","active","payload","label","length","className","Typography","value","price","prices","map","name","format","Date","toFixed","Wrapper","ButtonGroup","variant","Button","onClick","style","height","ResponsiveContainer","width","AreaChart","data","margin","top","right","left","bottom","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","XAxis","dataKey","axisLine","tickLine","YAxis","tickCount","tickFormatter","type","domain","CartesianGrid","opacity","vertical","Tooltip","content","Area","stroke","fillOpacity","fill","styled","currentCoinPrice","selectCoinCurrentPrice","coinValuation","selectCoinValuation","coin24High","selectCoin24High","coin24Low","selectCoin24Low","coinMarketCap","selectCoinMarketCap","CardHeader","title","CardContent","List","ListItem","toLocaleString","Divider","divider","light","coinDetails","selectCoinDetails","getCoinDetails","clearCoinMarketChart","clearCoinDetails","Breadcrumbs","to","Stack","spacing","direction","Avatar","src","image","thumb","alt","sx","alignItems","color","selectCoins","state","coingeco","coins","details","chart","market_data","current_price","usd","fully_diluted_valuation","high_24h","low_24h","market_cap"],"sourceRoot":""}